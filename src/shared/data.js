export const DATA =
    [ {
              "repository": {
                "issues": {
                  "nodes": [
                    {
                      "title": "Demo Blog 2  (React Blog Github) üòÄ",
                      "body": "![Markdown (2)](https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/1280px-Markdown-mark.svg.png)\r\n\r\n\r\n## Live demo\r\n\r\nChanges are automatically rendered as you type.\r\n\r\n## Table of Contents\r\n\r\n* Implements [GitHub Flavored Markdown](https://github.github.com/gfm/)\r\n* Renders actual, \"native\" React DOM elements\r\n* Allows you to escape or skip HTML (try toggling the checkboxes above)\r\n* If you escape or skip the HTML, no `dangerouslySetInnerHTML` is used! Yay!\r\n\r\n## HTML block below\r\n\r\n<blockquote>\r\n  This blockquote will change based on the HTML settings above.\r\n</blockquote>\r\n\r\n## How about some code?\r\n```js\r\nvar React = require('react');\r\nvar Markdown = require('react-markdown');\r\n\r\nReact.render(\r\n  <Markdown source=\"# Your markdown here\" />,\r\n  document.getElementById('content')\r\n);\r\n```\r\n\r\nPretty neat, eh?\r\n\r\n## More info?\r\n\r\nRead usage information and more on Github. These tell git to add all the work that you‚Äôve done so far into one tidy package called a ‚Äúcommit.‚Äù Then, it names your commit to represent the changes that you‚Äôve made. For my first commit, I always call it ‚Äúinitial commit.‚Äù However, if you just built your header HTML, you might call your commit ‚Äúheader HTML.‚Äù You should see something like this:\r\n\r\n\r\n---------------\r\n\r\nA component by [Saad Pasta](https://saadpasta.github.io/)\r\n",
                      "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/763eec3d234b56c917301ea5a45c34ae602a8b089019a23ebd21c6121e58909c/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f342f34382f4d61726b646f776e2d6d61726b2e7376672f3132383070782d4d61726b646f776e2d6d61726b2e7376672e706e67\"><img src=\"https://camo.githubusercontent.com/763eec3d234b56c917301ea5a45c34ae602a8b089019a23ebd21c6121e58909c/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f342f34382f4d61726b646f776e2d6d61726b2e7376672f3132383070782d4d61726b646f776e2d6d61726b2e7376672e706e67\" alt=\"Markdown (2)\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/1280px-Markdown-mark.svg.png\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Live demo</h2>\n<p dir=\"auto\">Changes are automatically rendered as you type.</p>\n<h2 dir=\"auto\">Table of Contents</h2>\n<ul dir=\"auto\">\n<li>Implements <a href=\"https://github.github.com/gfm/\">GitHub Flavored Markdown</a></li>\n<li>Renders actual, \"native\" React DOM elements</li>\n<li>Allows you to escape or skip HTML (try toggling the checkboxes above)</li>\n<li>If you escape or skip the HTML, no <code>dangerouslySetInnerHTML</code> is used! Yay!</li>\n</ul>\n<h2 dir=\"auto\">HTML block below</h2>\n<blockquote>\n  This blockquote will change based on the HTML settings above.\n</blockquote>\n<h2 dir=\"auto\">How about some code?</h2>\n<div class=\"highlight highlight-source-js position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"var React = require('react');\nvar Markdown = require('react-markdown');\n\nReact.render(\n  &lt;Markdown source=&quot;# Your markdown here&quot; /&gt;,\n  document.getElementById('content')\n);\n\"><pre><span class=\"pl-k\">var</span> <span class=\"pl-v\">React</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'react'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">var</span> <span class=\"pl-v\">Markdown</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'react-markdown'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">render</span><span class=\"pl-kos\">(</span>\n  <span class=\"pl-c1\">&lt;</span><span class=\"pl-v\">Markdown</span> <span class=\"pl-c1\">source</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"# Your markdown here\"</span> <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getElementById</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'content'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Pretty neat, eh?</p>\n<h2 dir=\"auto\">More info?</h2>\n<p dir=\"auto\">Read usage information and more on Github. These tell git to add all the work that you‚Äôve done so far into one tidy package called a ‚Äúcommit.‚Äù Then, it names your commit to represent the changes that you‚Äôve made. For my first commit, I always call it ‚Äúinitial commit.‚Äù However, if you just built your header HTML, you might call your commit ‚Äúheader HTML.‚Äù You should see something like this:</p>\n<hr>\n<p dir=\"auto\">A component by <a href=\"https://saadpasta.github.io/\" rel=\"nofollow\">Saad Pasta</a></p>",
                      "bodyText": "Live demo\nChanges are automatically rendered as you type.\nTable of Contents\n\nImplements GitHub Flavored Markdown\nRenders actual, \"native\" React DOM elements\nAllows you to escape or skip HTML (try toggling the checkboxes above)\nIf you escape or skip the HTML, no dangerouslySetInnerHTML is used! Yay!\n\nHTML block below\n\n  This blockquote will change based on the HTML settings above.\n\nHow about some code?\nvar React = require('react');\nvar Markdown = require('react-markdown');\n\nReact.render(\n  <Markdown source=\"# Your markdown here\" />,\n  document.getElementById('content')\n);\nPretty neat, eh?\nMore info?\nRead usage information and more on Github. These tell git to add all the work that you‚Äôve done so far into one tidy package called a ‚Äúcommit.‚Äù Then, it names your commit to represent the changes that you‚Äôve made. For my first commit, I always call it ‚Äúinitial commit.‚Äù However, if you just built your header HTML, you might call your commit ‚Äúheader HTML.‚Äù You should see something like this:\n\nA component by Saad Pasta",
                      "number": 2,
                      "labels": {
                        "nodes": [
                          {
                            "color": "a1a0e5",
                            "name": "blog",
                            "id": "MDU6TGFiZWwxODI0MDAyMzIz",
                            "__typename": "Label"
                          },
                          {
                            "color": "ce7216",
                            "name": "reactjs",
                            "id": "MDU6TGFiZWwxODMwNjM5ODI1",
                            "__typename": "Label"
                          }
                        ],
                        "__typename": "LabelConnection"
                      },
                      "author": {
                        "url": "https://github.com/saadpasta",
                        "avatarUrl": "https://avatars.githubusercontent.com/u/23307811?u=eab46b153eef3f5183930e61898b462447af9219&v=4",
                        "login": "saadpasta",
                        "__typename": "User"
                      },
                      "updatedAt": "2022-01-02T02:47:36Z",
                      "id": "MDU6SXNzdWU1NjA4OTkzNzA=",
                      "__typename": "Issue"
                    },
                    {
                      "title": "Demo Blog (React Blog Github)üî•",
                      "body": "![Markdown (2)](https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/1280px-Markdown-mark.svg.png)\r\n\r\n\r\n## Live demo\r\n\r\nChanges are automatically rendered as you type.\r\n\r\n## Table of Contents\r\n\r\n* Implements [GitHub Flavored Markdown](https://github.github.com/gfm/)\r\n* Renders actual, \"native\" React DOM elements\r\n* Allows you to escape or skip HTML (try toggling the checkboxes above)\r\n* If you escape or skip the HTML, no `dangerouslySetInnerHTML` is used! Yay!\r\n\r\n## HTML block below\r\n\r\n<blockquote>\r\n  This blockquote will change based on the HTML settings above.\r\n</blockquote>\r\n\r\n## How about some code?\r\n```js\r\nvar React = require('react');\r\nvar Markdown = require('react-markdown');\r\n\r\nReact.render(\r\n  <Markdown source=\"# Your markdown here\" />,\r\n  document.getElementById('content')\r\n);\r\n```\r\n\r\nPretty neat, eh?\r\n\r\n## More info?\r\n\r\nRead usage information and more on Github. These tell git to add all the work that you‚Äôve done so far into one tidy package called a ‚Äúcommit.‚Äù Then, it names your commit to represent the changes that you‚Äôve made. For my first commit, I always call it ‚Äúinitial commit.‚Äù However, if you just built your header HTML, you might call your commit ‚Äúheader HTML.‚Äù You should see something like this:\r\n\r\n\r\n---------------\r\n\r\nA component by [Saad Pasta](https://saadpasta.github.io/)\r\n",
                      "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/763eec3d234b56c917301ea5a45c34ae602a8b089019a23ebd21c6121e58909c/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f342f34382f4d61726b646f776e2d6d61726b2e7376672f3132383070782d4d61726b646f776e2d6d61726b2e7376672e706e67\"><img src=\"https://camo.githubusercontent.com/763eec3d234b56c917301ea5a45c34ae602a8b089019a23ebd21c6121e58909c/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f342f34382f4d61726b646f776e2d6d61726b2e7376672f3132383070782d4d61726b646f776e2d6d61726b2e7376672e706e67\" alt=\"Markdown (2)\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/1280px-Markdown-mark.svg.png\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Live demo</h2>\n<p dir=\"auto\">Changes are automatically rendered as you type.</p>\n<h2 dir=\"auto\">Table of Contents</h2>\n<ul dir=\"auto\">\n<li>Implements <a href=\"https://github.github.com/gfm/\">GitHub Flavored Markdown</a></li>\n<li>Renders actual, \"native\" React DOM elements</li>\n<li>Allows you to escape or skip HTML (try toggling the checkboxes above)</li>\n<li>If you escape or skip the HTML, no <code>dangerouslySetInnerHTML</code> is used! Yay!</li>\n</ul>\n<h2 dir=\"auto\">HTML block below</h2>\n<blockquote>\n  This blockquote will change based on the HTML settings above.\n</blockquote>\n<h2 dir=\"auto\">How about some code?</h2>\n<div class=\"highlight highlight-source-js position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"var React = require('react');\nvar Markdown = require('react-markdown');\n\nReact.render(\n  &lt;Markdown source=&quot;# Your markdown here&quot; /&gt;,\n  document.getElementById('content')\n);\n\"><pre><span class=\"pl-k\">var</span> <span class=\"pl-v\">React</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'react'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">var</span> <span class=\"pl-v\">Markdown</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'react-markdown'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">React</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">render</span><span class=\"pl-kos\">(</span>\n  <span class=\"pl-c1\">&lt;</span><span class=\"pl-v\">Markdown</span> <span class=\"pl-c1\">source</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"# Your markdown here\"</span> <span class=\"pl-c1\">/</span><span class=\"pl-c1\">&gt;</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getElementById</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'content'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Pretty neat, eh?</p>\n<h2 dir=\"auto\">More info?</h2>\n<p dir=\"auto\">Read usage information and more on Github. These tell git to add all the work that you‚Äôve done so far into one tidy package called a ‚Äúcommit.‚Äù Then, it names your commit to represent the changes that you‚Äôve made. For my first commit, I always call it ‚Äúinitial commit.‚Äù However, if you just built your header HTML, you might call your commit ‚Äúheader HTML.‚Äù You should see something like this:</p>\n<hr>\n<p dir=\"auto\">A component by <a href=\"https://saadpasta.github.io/\" rel=\"nofollow\">Saad Pasta</a></p>",
                      "bodyText": "Live demo\nChanges are automatically rendered as you type.\nTable of Contents\n\nImplements GitHub Flavored Markdown\nRenders actual, \"native\" React DOM elements\nAllows you to escape or skip HTML (try toggling the checkboxes above)\nIf you escape or skip the HTML, no dangerouslySetInnerHTML is used! Yay!\n\nHTML block below\n\n  This blockquote will change based on the HTML settings above.\n\nHow about some code?\nvar React = require('react');\nvar Markdown = require('react-markdown');\n\nReact.render(\n  <Markdown source=\"# Your markdown here\" />,\n  document.getElementById('content')\n);\nPretty neat, eh?\nMore info?\nRead usage information and more on Github. These tell git to add all the work that you‚Äôve done so far into one tidy package called a ‚Äúcommit.‚Äù Then, it names your commit to represent the changes that you‚Äôve made. For my first commit, I always call it ‚Äúinitial commit.‚Äù However, if you just built your header HTML, you might call your commit ‚Äúheader HTML.‚Äù You should see something like this:\n\nA component by Saad Pasta",
                      "number": 1,
                      "labels": {
                        "nodes": [
                          {
                            "color": "a1a0e5",
                            "name": "blog",
                            "id": "MDU6TGFiZWwxODI0MDAyMzIz",
                            "__typename": "Label"
                          },
                          {
                            "color": "72e09e",
                            "name": "code",
                            "id": "MDU6TGFiZWwxODI0MDAyODM2",
                            "__typename": "Label"
                          }
                        ],
                        "__typename": "LabelConnection"
                      },
                      "author": {
                        "url": "https://github.com/saadpasta",
                        "avatarUrl": "https://avatars.githubusercontent.com/u/23307811?u=eab46b153eef3f5183930e61898b462447af9219&v=4",
                        "login": "saadpasta",
                        "__typename": "User"
                      },
                      "updatedAt": "2021-12-06T15:05:42Z",
                      "id": "MDU6SXNzdWU1NTg5NDkwMDU=",
                      "__typename": "Issue"
                    }
                  ],
                  "__typename": "IssueConnection"
                },
                "__typename": "Repository"
              }
            }
    ];